# def print_10times_star():
#     print('*' * 10)

# print_10times_star()

# def plus(v1,v2):
#     result = 0
#     result = v1 + v2
#     return result

# hap =plus(100,200)
# print(hap)

# def plus(v1,v2):
#     """이 함수는 v1과 v2를 더한 뒤 결과를 반환하는 함수입니다."""
#     result = 0
#     reult = v1+ v2
#     print(result)

# plus(100,200)
# print(plus.__doc__)

# def add_multi(n1,n2):
#     return n1 + n2, n1 * n2

# result = add_multi(5,10)
# print(result)

# def two _times(n):
#     return print(n *2)

# two_times(5)
# two_times('abc')

# two_times([1,2,3])
# two_times([1,2,3])

# def add_print(a,b):
#     print("%d,%d의 합은 %d입니다." % (a,b,a+b))

# add_print(1,9)
# hap = add_print(3,4)
# print(hap)

# def hi()
#     return 'Hi 파이썬 프로그래밍'

# aha = hi()
# print(aha)

# def hi2():
#     print('Hi 파이썬 프로그래밍')

# hi2()

# def student_info(name,phone,id_no='비공개'):
#     print('이름: ',name)
#     print('휴대폰: ',phone)
#     print('주민번호: ',id_no)

# student_info('김철수', '010-1234-5678')

# def student_info(name,id_no='비공개',phone):
#     print('이름: ',name)
#     print('휴대포: ',phone)
#     print('주민번호: ', id_no)

# student_info('김철수', '010-1234-5678')

# def f_a():
#     num = 20
#     print("f_a()의 num값 %d" % num)
# def f_b() :
#     print('f_b()의 num값 %d' % num)
# num =10
# f_a()
# f_b()

# def f_a():
#     global num
#     num = 20
#     print("f_a()의 num값 %d" % num)
# num =10
# f_a()
# print('전역변수의 num값 %d' % num)


# def calc(v1,v2,op):
#     result = 0
#     if op == '+' :
#         result = v1 + v2
#     elif op == '-' :
#         result = v1 - v2
#     elif op == '*' : 
#         result = v1 * v2
#     elif op == '/' :
#         if var2 == 0:
#             return 'error'
#         else : 
#             result = v1 /v2
#     elif op  == '**' :
#         result = v1 ** v2
#     return result
# res,var1,var2,oper = 0,0,0,''

# while True :
#     oper =input("연산자를 입력하세요(+,-,*,/,**,종료: q) : ")
#     if oper == 'q' :
#         print('프로그램 종료.')
#         break
#     var1 = int(input('첫번째수를 입력: ' ))
#     var2 = int(input('두번째수를 입력: ' ))
#     res =calc(var1,var2,oper)
#     if res == 'eroor' :
#         print("0으로 나누면 안됩니다")
#     else :
#         print('## 계산기 : %d %s %d' % (var1,oper,var2,res))

# def add(n,m):

#     return n+m
# print('add함수: ',add(2,5))
# #람다함수로 작성
# print('람다함수: ',(lamda n,m: n+m)(2,5))

# product1 = 1
# list = [1,2,3,4]
# for num in list:
#     product1 = product1 * num
# print('product1 = ', product1)

# from functoolds import reduce
# product2 = reduce((lambda x,y: x* y), [1,2,3,4])
# print('product2 =',product2)

# from functools import reduce
# def cube(y):
#     return y * y * y;
# g = lambda x: x*x*x
# print('print(g(7))= ',g(7))
# print('print(cube(5)) = ', cube(5))

# li =[5,7,22,97,54,62,77,23,73,61]
# print('li = ', li)
# final_list= list(filter(lambda x: (x%2 != 0), li))
# print('print(final_list) = ', final_list)

# li =[5,7,22,97,54,62,77,23,73,61]
# final_list = list(map(lambda x: x*2,li))
# print('print(final_list) = ', final_list)

# li =[5,8,10,20,50,100]
# sum = reduce((lambda x, y: x+ y), li)
# print('print(sum) = ', sum)

# product = reduce((lambda x,y: x*y),[1,2,3,4])
# print('print(product) = ', product)


# def f(x):
#     if x ==1:
#         return str(x)
#     elif x == 2:
#         return float(x)
#     else:
#         return x + 10
    
# c_lambda = list(map(f,a))
# print('c_lambda = ', c_lambda)

